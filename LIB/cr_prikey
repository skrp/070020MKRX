#use Digest::SHA;
#use File::Copy;
#slurp cr_keymeta f_digest cr_pass cr_keymeta
#my ($kdump, $mdump, $node, $igrp, $iu) = @ARGV;
#cr_prikey($kdump, $mdump, $node, $igrp, $iu);
############################
sub cr_prikey
{
	my ($kdump, $mdump, $node, $igrp, $iu) = @_;
	die "ARG1 keydump ARG2 keymetadump ARG3 node ARG4 grp ARG5 usr\n" unless (defined $iu);
############################
	my $key = "/usr/home/$iu/.ssh/id_rsa";
	my $pub = $key.'.pub';
############################
        next "FAIL exist $key\n" if (-e $key);
############################
	my $ipass = cr_pass();
	my $upass = $ipass;
	$ipass =~ s% %%g;
############################
	`ssh-keygen -q -N "$ipass" -t rsa -b 2048 -f $key`;
############################
	my @pub = slurp($pub);
	my @pp = split(" ", $pub[0]);
	
	open(my $pfh, '>', $pub);
	print $pfh "$pp[0] $pp[1]";
	close $pfh;
############################
	my $isha = f_digest($key);
	move($key, "$kdump/$isha");
############################
	copy($pub, "$kdump/p$isha");
	move($pub, "/usr/home/$iu/.ssh/authorized_keys");
############################
	cr_keymeta($mdump, $node, $igrp, $iu, $isha);

	open(my $kfh, '>>', "$mdump/k$isha");
	print $kfh "$upass\n";
	close $kfh;

	print "YAY $key\n";
}
############################
